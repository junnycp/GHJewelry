package com.codershop.shoppinganywhere.common.dao.impl;import com.codershop.shoppinganywhere.common.dao.ScheduleLogDao;import com.codershop.shoppinganywhere.common.entity.ScheduleLog;import com.codershop.shoppinganywhere.common.generics.impl.GenericDaoImpl;import com.google.common.collect.ImmutableMap;import org.springframework.stereotype.Repository;import java.sql.Connection;import java.sql.PreparedStatement;/** * com.fis.fw.core.dao.impl.ScheduleLogDaoImpl * TungHuynh * Created by sondt18@fpt.com.vn * Date 24/06/2019 9:47 AM */@Repository("ScheduleLogDaoImpl")public class ScheduleLogDaoImpl extends GenericDaoImpl<ScheduleLog, Integer> implements ScheduleLogDao {    @Override    public void save(Iterable<ScheduleLog> lst) throws Exception {        try (Connection conn = dataSource.getConnection()) {            conn.setAutoCommit(false);            PreparedStatement psmt = conn.prepareStatement(                    "INSERT INTO ADMIN_DTHGD.SCHEDULE_LOG(SCHEDULE_LOG_ID, " +                            " SCHEDULE_CONFIG_ID, LEVEL_LOG, CREATE_TIME, CONTENT) " +                            " VALUES (ADMIN_DTHGD.SCHEDULE_LOG_SEQ.nextval, ?, ?, ?, ?)");            int count = 0;            for (ScheduleLog item : lst) {                psmt.setObject(1, item.getScheduleConfigId());                psmt.setObject(2, item.getLevelLog());                psmt.setObject(3, new java.sql.Date(item.getCreateTime().getTime()));                psmt.setObject(4, item.getContent());                psmt.execute();                count++;                if (count % 100 == 0) {                    conn.commit();                }            }            conn.commit();        } catch (Exception ex) {            throw ex;        }    }    @Override    public int deleteExpired(Integer expiredDays) {        String sql = "delete from SCHEDULE_LOG where sysdate - CREATE_TIME >= :expired";        return namedParameterJdbcTemplate.update(sql, ImmutableMap.of("expired", expiredDays));    }}