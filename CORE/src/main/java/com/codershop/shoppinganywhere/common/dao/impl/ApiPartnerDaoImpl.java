package com.codershop.shoppinganywhere.common.dao.impl;import com.codershop.shoppinganywhere.common.dao.ApiPartnerDao;import com.codershop.shoppinganywhere.common.entity.ApiPartner;import com.codershop.shoppinganywhere.common.generics.impl.GenericDaoImpl;import org.springframework.stereotype.Repository;import java.util.HashMap;import java.util.List;import java.util.Map;@Repository("ApiPartnerDaoImpl")public class ApiPartnerDaoImpl extends GenericDaoImpl<ApiPartner, Integer> implements ApiPartnerDao {    public List<ApiPartner> getByCondition(Map map) {        String sql = "select a.API_PARTNER_ID, " +                "   a.CODE, " +                "   a.NAME, " +                "   a.URL, " +                "   a.PASSWORD, " +                "   a.AUTHEN_KEY, " +                "   a.STATUS, " +                "   a.DESCRIPTION," +                "   ap.VALUE statusLabel" +                " from API_PARTNER a left join APP_PARAM ap on (ap.CODE=a.STATUS and ap.type='STATUS')" +                " where (:status is null or a.STATUS=:status)";        //  return namedParameterJdbcTemplate.query(sql,new BeanPropertyRowMapper<>(ApiPartner.class));        return getByCondition(map, sql, ApiPartner.class);    }    @Override    public boolean existsCode(String code) {        Map map = new HashMap();        map.put("code", code);        String sql = "select a.CODE from API_PARTNER a where a.STATUS = 'ACTIVE' and a.CODE = :code ";        List<ApiPartner> lst = getByCondition(map, sql, ApiPartner.class);        if (lst != null && lst.size() > 0) {            return true;        } else {            return false;        }    }    @Override    public ApiPartner getByCode(String code) {        Map map = new HashMap();        map.put("code", code);        String sql = "select a.api_partner_id apiPartnerId, a.CODE, a.name, a.url, a.user_name userName, a.password, a.description, authen_key authenKey " +                "from API_PARTNER a where a.STATUS = 'ACTIVE' and a.CODE = :code ";        List<ApiPartner> lst = getByCondition(map, sql, ApiPartner.class);        if (lst != null && lst.size() > 0) {            return lst.get(0);        } else {            return null;        }    }}